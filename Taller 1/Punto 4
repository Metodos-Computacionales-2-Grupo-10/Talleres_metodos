
import numpy as np
import matplotlib.pyplot as plt
import os
from scipy.signal import find_peaks
from scipy.integrate import simpson

def carga(path):
    energia = []
    conteo = []
    with open(path, 'r', encoding='latin1') as file:
        for linea in file:
            linea = linea.strip()
            if linea == '' or linea.startswith('#'):
                continue
            parts = linea.split()
            if len(parts) >= 2:
                energia.append(float(parts[0]))
                conteo.append(float(parts[1]))
    return np.array(energia), np.array(conteo)

materiales_anodo = ["W", "Rh", "Mo"]
prominence = 0.05  # para detectar picos
radio = 3  # puntos a cada lado del pico que eliminamos

# Guardar resultados: {material: [(voltaje, porcentaje)]}
resultados = {m: [] for m in materiales_anodo}

for material in materiales_anodo:
    for voltaje in range(10, 50, 1):
        path = f"Taller 1/{material}_unfiltered_10kV-50kV/{material}_{voltaje}kV.dat"
        if not os.path.exists(path):
            print(f"Archivo no encontrado: {path}")
            continue
        
        energia, conteo = carga(path)
        
        # Detectar picos
        altura_minima = prominence * np.max(conteo)
        picos, _ = find_peaks(conteo, prominence=altura_minima)
        
        # Crear continuo quitando picos
        indices_a_eliminar = set()
        for pico in picos:
            for i in range(pico - radio, pico + radio + 1):
                if 0 <= i < len(conteo):
                    indices_a_eliminar.add(i)
        
        energia_filtrada = [energia[i] for i in range(len(conteo)) if i not in indices_a_eliminar]
        conteo_filtrado = [conteo[i] for i in range(len(conteo)) if i not in indices_a_eliminar]
        
        # Interpolación del continuo
        continuo_interp = np.interp(energia, energia_filtrada, conteo_filtrado)
        
        # Áreas con Simpson
        area_total = simpson(conteo, energia)
        area_continuo = simpson(continuo_interp, energia)
        area_picos = area_total - area_continuo
        
        # Porcentaje
        porcentaje = (area_picos / area_continuo) * 100
        resultados[material].append((voltaje, porcentaje))

# Graficar resultado
plt.figure(figsize=(8, 6))
for material, datos in resultados.items():
    datos = sorted(datos, key=lambda x: x[0])
    voltajes = [d[0] for d in datos]
    porcentajes = [d[1] for d in datos]
    plt.plot(voltajes, porcentajes, marker="o", label=f"Ánodo {material}")

plt.xlabel("Voltaje del tubo (kV)")
plt.ylabel("Área picos / Área continuo (%)")
plt.title("Porcentaje de área de picos vs continuo")
plt.grid(True, linestyle=":")
plt.legend()
plt.tight_layout()
plt.savefig("Taller 1/4.pdf", bbox_inches="tight", pad_inches=0.1)
print("Gráfico guardado como 4.pdf")
